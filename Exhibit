import re
import PyPDF2
import tabula
import pandas as pd
from datetime import datetime

# Function to extract the metadata from text
def extract_metadata(text):
    data = {}
    
    # Extract Subsidized/Non-Subsidized status
    if 'Subsidized' in text:
        data['Sub/Non Sub'] = 'Subsidized'
    elif 'Non-Subsidized' in text:
        data['Sub/Non Sub'] = 'Non Subsidized'
    else:
        data['Sub/Non Sub'] = 'Not Extracted'
    
    # Extract Program Type
    if 'Low rate Program' in text:
        data['Program Type'] = 'Low rate'
    else:
        data['Program Type'] = 'Not Extracted'
    
    # Extract Program Location
    program_location_match = re.search(r'(\d{2}MY.*?)(?=Effective:)', text)
    if program_location_match:
        data['Program Location'] = program_location_match.group(1).strip()
    else:
        data['Program Location'] = 'Not Extracted'
    
    # Extract Dates
    date_match = re.search(r'Effective: (\w+ \d{1,2}, \d{4}) - (\w+ \d{1,2}, \d{4})', text)
    if date_match:
        data['Start Date'] = date_match.group(1).strip()
        data['End Date'] = date_match.group(2).strip()
    else:
        data['Start Date'] = 'Not Extracted'
        data['End Date'] = 'Not Extracted'
    
    return data

# Function to extract text and tables from PDF
def extract_from_pdf(pdf_path):
    # Extract text from PDF
    with open(pdf_path, 'rb') as file:
        reader = PyPDF2.PdfReader(file)
        full_text = ""
        for page in reader.pages:
            full_text += page.extract_text() + "\n"

    # Extract tables from PDF
    tables = tabula.read_pdf(pdf_path, pages='all', multiple_tables=True)

    # Process text to extract metadata
    table_start_indices = [m.start() for m in re.finditer(r'Table', full_text)]
    paragraphs = []
    last_index = 0
    for index in table_start_indices:
        paragraphs.append(full_text[last_index:index].strip())
        last_index = index
    
    # Assuming tables are in order, extract metadata for each table
    metadata = [extract_metadata(paragraph) for paragraph in paragraphs]

    return tables, metadata

# Path to the PDF file
pdf_path = 'path_to_your_pdf_file.pdf'

# Extract tables and metadata
tables, metadata = extract_from_pdf(pdf_path)

# Save tables and metadata to Excel file
with pd.ExcelWriter('output.xlsx') as writer:
    for i, (table, meta) in enumerate(zip(tables, metadata)):
        # Convert metadata to DataFrame and concatenate with table
        meta_df = pd.DataFrame([meta])
        combined_df = pd.concat([meta_df, table], axis=1)
        
        # Write to separate sheet
        combined_df.to_excel(writer, sheet_name=f'Table_{i+1}', index=False)
